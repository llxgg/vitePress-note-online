import{_ as s,c as a,o as i,aV as n}from"./chunks/framework.IgyRtAO-.js";const E=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"pages/engineeringAdvanced/Git/Basic/2_git与项目关联.md","filePath":"pages/engineeringAdvanced/Git/Basic/2_git与项目关联.md","lastUpdated":1727689213000}'),e={name:"pages/engineeringAdvanced/Git/Basic/2_git与项目关联.md"},l=n(`<h2 id="远程仓库与本地仓库进行关联" tabindex="-1">远程仓库与本地仓库进行关联 <a class="header-anchor" href="#远程仓库与本地仓库进行关联" aria-label="Permalink to &quot;远程仓库与本地仓库进行关联&quot;">​</a></h2><h3 id="本地仓库初始化git" tabindex="-1">本地仓库初始化git <a class="header-anchor" href="#本地仓库初始化git" aria-label="Permalink to &quot;本地仓库初始化git&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git init</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="暂存代码" tabindex="-1">暂存代码 <a class="header-anchor" href="#暂存代码" aria-label="Permalink to &quot;暂存代码&quot;">​</a></h3><ul><li><p><code>git add .</code> 注意空文件夹需要创建一个 <code>.gitkeep</code> 文件，才会把空文件夹也推送到远程仓库。</p><ul><li>这个文件其实就是目录下的一个占位符文件。如果没有 <code>.gitkeep</code> 文件，对于空目录，git会忽略。</li><li>注意：在项目的 <code>.gitignore</code> 中，不要把 <code>.gitkeep</code> 添加，否则会忽略，这样就没有任何意义了。</li><li><code>.gitkeep</code> 是一个约定俗成的文件名并不带有特殊规则，可以使用.demo等，但不是约定俗成的文件名。</li></ul></li><li><p><code>git commit -m &#39;需要的留言信息&#39;</code></p></li><li><p>做完以上命令后，你的本地git仓库已经保存完成了，这时候就得跟你刚才新建的Gitee远程仓库关联起来。</p></li><li><p>简写语法：</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git commit </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">m </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;信息&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">等价于：git add .  和  git commit </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">m </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;信息&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li></ul><h3 id="本地仓库与远程仓库关联" tabindex="-1">本地仓库与远程仓库关联 <a class="header-anchor" href="#本地仓库与远程仓库关联" aria-label="Permalink to &quot;本地仓库与远程仓库关联&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 语法：git remote add origin 仓库地址</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 注意：如果使用ssh模式开发，则仓库地址为ssh地址；</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git remote add origin git@gitee.com:llxgg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">vite</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">press</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">note.git</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># http模式开发：</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git remote add origin </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">https</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//gitee.com/llxgg/vite-press-note.git</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="代码推送到远程仓库" tabindex="-1">代码推送到远程仓库 <a class="header-anchor" href="#代码推送到远程仓库" aria-label="Permalink to &quot;代码推送到远程仓库&quot;">​</a></h3><ul><li><code>-u origin</code> 是建立上游关系，这样以后推送代码的时候，直接使用 <code>git push</code> 就可以啦，或者说以后拉取代码的时候直接使用 <code>git pull</code>就行。</li></ul><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// -u是pull的意思；如果想直接覆盖初始仓库,将 -u 改为 -f</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git push </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">u origin master</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="gitignore文件的作用" tabindex="-1"><code>.gitignore</code>文件的作用 <a class="header-anchor" href="#gitignore文件的作用" aria-label="Permalink to &quot;\`.gitignore\`文件的作用&quot;">​</a></h2><ul><li>主要用于忽略某些文件提交到远程仓库，比如<code>node_modules</code>。</li></ul><h3 id="只忽略一个特定的文件" tabindex="-1">只忽略一个特定的文件 <a class="header-anchor" href="#只忽略一个特定的文件" aria-label="Permalink to &quot;只忽略一个特定的文件&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 忽略位于根目录下的 text.txt 文件:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">在 .gitignore 文件中，添加下面的代码</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">text.txt</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 忽略一个位于根目录下的 test 目录下的 text.txt 文件：</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">test</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">text.txt </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 等价于 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> test</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">text.txt</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 想忽略全局的 text.txt 文件：</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">在这种情况下，不需要提供特定文件的完整路径。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">text.txt</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="忽略整个目录及内容" tabindex="-1">忽略整个目录及内容 <a class="header-anchor" href="#忽略整个目录及内容" aria-label="Permalink to &quot;忽略整个目录及内容&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 在 .gitignore 文件中，添加要忽略的目录名称，并在最后加上斜线 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">：</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 这个命令将忽略位于你的项目中任何地方的名为 test 的目录（包括目录中的其他文件和其他子目录）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">test</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li>注意：如果只写一个文件的名字或者只写目录的名字而不在最后添加斜线 /</li><li>那么这个模式将同时匹配任何带有这个名字的文件或目录：</li></ul><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 匹配任何名字带有 test 的文件和目录</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">test</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="忽略以特定单词开头的文件或目录" tabindex="-1">忽略以特定单词开头的文件或目录 <a class="header-anchor" href="#忽略以特定单词开头的文件或目录" aria-label="Permalink to &quot;忽略以特定单词开头的文件或目录&quot;">​</a></h3><ul><li>你想忽略所有名称以 <code>img</code> 开头的文件和目录。需要指定你想忽略的名称，后面跟着 * 通配符选择器</li></ul><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 在 .gitignore 文件中，忽略所有名字以 img 开头的文件和目录</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">img</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="忽略以特定单词结尾的文件或目录" tabindex="-1">忽略以特定单词结尾的文件或目录 <a class="header-anchor" href="#忽略以特定单词结尾的文件或目录" aria-label="Permalink to &quot;忽略以特定单词结尾的文件或目录&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 在 .gitignore 文件中，忽略所有以 .md 文件扩展名结尾的 markdown 文件</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.md</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="项目经常忽略的文件" tabindex="-1">项目经常忽略的文件 <a class="header-anchor" href="#项目经常忽略的文件" aria-label="Permalink to &quot;项目经常忽略的文件&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">node_modules</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dist</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.vscode</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.idea</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>`,25),t=[l];function p(h,r,d,c,k,o){return i(),a("div",null,t)}const u=s(e,[["render",p]]);export{E as __pageData,u as default};
