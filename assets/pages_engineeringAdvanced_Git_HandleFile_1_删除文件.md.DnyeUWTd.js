import{_ as s,c as a,o as i,aV as n}from"./chunks/framework.IgyRtAO-.js";const b=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"pages/engineeringAdvanced/Git/HandleFile/1_删除文件.md","filePath":"pages/engineeringAdvanced/Git/HandleFile/1_删除文件.md","lastUpdated":1727799063000}'),e={name:"pages/engineeringAdvanced/Git/HandleFile/1_删除文件.md"},l=n(`<h2 id="一、命令行删除" tabindex="-1">一、命令行删除 <a class="header-anchor" href="#一、命令行删除" aria-label="Permalink to &quot;一、命令行删除&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">删除文件指令：git rm </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fileName</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">需要删除的文件名称</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">删除文件夹指令：git rm </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">r 文件夹名称 </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 会将文件夹下的所有文件都删除。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">更新到远程仓库：</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git commit </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;删除不需要的文件&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git push</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="二、强制删除" tabindex="-1">二、强制删除 <a class="header-anchor" href="#二、强制删除" aria-label="Permalink to &quot;二、强制删除&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 强制删除git中记录的文件</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">指令：git rm </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">f </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">要删除的file文件</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="三、不删除工作区中的文件" tabindex="-1">三、不删除工作区中的文件 <a class="header-anchor" href="#三、不删除工作区中的文件" aria-label="Permalink to &quot;三、不删除工作区中的文件&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 删除仓库中的文件,但是保留在工作区</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git rm </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cache </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">要删除的file文件</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="四、删除-已经执行commit-的文件" tabindex="-1">四、删除 已经执行<code>commit</code> 的文件 <a class="header-anchor" href="#四、删除-已经执行commit-的文件" aria-label="Permalink to &quot;四、删除 已经执行\`commit\` 的文件&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git add .</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git commit </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;包含了需要删除的a.txt文件&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 删除语法：</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git rm </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cache a.txt </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 这样只会删除commit暂存区的文件，不会删除工作区的文件</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 这时候执行：git status 会发现 a.txt文件是红色状态，代表未追踪，需要重新git add a.txt 重新追踪</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 紧跟上面的操作，可能还有其他问题：a.txt文件未追踪的同时，b.txt文件修改了</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">1.执行git status 会提示a.txt为未追踪文件，b.txt以被修改</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">2.这时候如果执行 git rm b.txt 是不会删除b.txt文件的，因为git有一个安全机制，是为了防止不小心删除了</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 如果必须要删除的话:执行强制删除命令</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git rm </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">f b.txt </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 会返回一个提示：“rm b.txt&quot; 代表删除成功的意思</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 提交到暂存区</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git commit </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;删除b.txt文件&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h2 id="五、本地文件误删-如何恢复" tabindex="-1">五、本地文件误删，如何恢复 <a class="header-anchor" href="#五、本地文件误删-如何恢复" aria-label="Permalink to &quot;五、本地文件误删，如何恢复&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	方案一：（使用reset）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    	1.git status 可以看到 user.png 文件已经被删除了</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        2.git reset </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">HEAD</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> user.png</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		3.git stauts 可以发现 user.png 文件已经恢复到工作区内了(状态为红色)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		4.git checkout </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> user.png </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 这时候就恢复成功了，与仓库同步。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	方案二：(checkout </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">HEAD</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">^</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		1.git status 可以看到 user.png 文件已经被删除了</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        2.git checkout </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">HEAD</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">^</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> user.png </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 这时候就恢复成功了，与仓库同步。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="六、远程仓库恢复误删文件" tabindex="-1">六、远程仓库恢复误删文件 <a class="header-anchor" href="#六、远程仓库恢复误删文件" aria-label="Permalink to &quot;六、远程仓库恢复误删文件&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">1.检查本地仓库状态: 运行 </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`git status\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 命令，确认没有待提交的更改。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">2.查看记录：运行 </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`git log -- &lt;file_name&gt;\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 命令，可以找到指定文件的修改记录</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">3.恢复已删文件：运行	</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`git checkout &lt;commit_hash&gt;^ -- &lt;file_name&gt;\`</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">commit_hash</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 表示提交记录的哈希值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	^ 表示该提交之前的状态</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">file_name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 表示文件名</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="注意" tabindex="-1">注意 <a class="header-anchor" href="#注意" aria-label="Permalink to &quot;注意&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 不能直接当普通文件删除，因为git还会存在该文件的，如果要删除文件，要使用git命令进行删除。</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 如果后期需要找回的，必须进行git处理，这样后面才能找回。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>`,14),t=[l];function p(h,r,k,d,E,c){return i(),a("div",null,t)}const u=s(e,[["render",p]]);export{b as __pageData,u as default};
